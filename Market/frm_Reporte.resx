<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Salir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAADOUlEQVRYR+2XTyhlURzHvedPYkFCyL/F
        8zQzkVhrVjZ2WImNBaVEFv4tUJRI2ciC7FjIipLIgpSVpIzGayRZoJRImTeI75zvb67bfdfx3n1j5o3F
        /OrT657f7/x+33fu75zTjXov5lJ4FZ8jBGuxpmkexRfFD8X3v4xf4VN8UphGVXQiQrAWa5r2X0DYAjIz
        MzE0NITh4WFkZ2drY4LwdgFNTU14enoCra2tTRsThLcL6OnpkeK0wcFBbUwQwhMQExOD6upqTE1Nob6+
        XsZ0AmpqasyY2NjYgBw2nAtwuVxobm7G1dWVFPP5fEhPT0dXV5c80wYGBpCSkoLd3V15vrm5QWtrqwjX
        5VQ4F1BZWYmLiwtJTFteXkZiYiK6u7uNkV8C4uPjMT8/b4z8ElFbW/sin4EzAfxXm5ubRkpgZWUFBQUF
        4tO9gpycHCwuLhqjwM7Ozms7xJmAuro63N/fS7LDw0MUFxebvtea0OPxYG9vT8a5SxobG02fBWcCpqen
        JRGtr68vwBdsF3R0dBgeYG5uDtHR0QF+RWgBCQkJ2NjYkCR+vx8VFRXWBNKYz9be3h7gKysrw+Xlpfi4
        GqmpqQF+RWgB7PT9/X1JcnZ2Bq/Xa02ArKwsjI+PY3JyEvn5+QG+3NxcnJycyFz+8tnqV4QWkJycjO3t
        bUnCf1NaWmpNIHBpNcsrfXB6eipzj46OdI0YWgAPkoWFBUny+PhoHkBOqKqqwt3dncxdX1+XbWuLCS2A
        9Pb2ShIaxWgSvSAuLg6zs7PGLMiFpYlzJqCkpMRcSjYiLx3dklvhtru9vZU5fHXl5eW6OGcCeAyPjIxI
        Mtr19bWcgDyg7LFJSUloaWnB+fm5EQ1MTEy8dhw7E0B476+urhopgYeHB2xtbaG/v1/6gocVzwi+6+f3
        TmOMfXdYcC6AFBYWYmlpSZrRany2j/H0W1tbQ1FRkTaXQXgCSFpaGjo7O3FwcPCiKI1jx8fHshoZGRna
        HBbCF0DYE3l5ebL0o6OjmJmZkY4fGxtDQ0ODXFRut1s718bvCbDDYg4L2vkzAt7A+xPAT7Ovikh8mrHG
        N0XApxk/FD8oqCoSfFS4Ff/aoqJ+AuUW3BejJMakAAAAAElFTkSuQmCC
</value>
  </data>
</root>