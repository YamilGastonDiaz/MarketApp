<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbox_img.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABtCAYAAABX7cScAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAX
        EQAAFxEByibzPwAAE9ZJREFUeF7tnQWsK0UUhnF31+Dh4ZogwSXB3S04QRLcCR7cgkOAkBDcXYJLcA9u
        QYK7+/C+4f7t2enZdtu72/bdd//kz3bPjpyZMzM7O9YxRiIMs6/oCofZO7rCYfaOrnCYvaMrHGbv6Apb
        cswxx4z0nvWK7eoj932WDlfYNxxrrLFcuUcVEjGVWXf63YrEP95444VJJpkkTDHFFGHKKacMU001VeTU
        U08dJptsssiJJ544jDPOOGHsscd2wxELxO0KGzJi/PHHjwrMO++8YdVVVw077LBD2GeffcJBBx0UTjvt
        tHDRRReFq666Ktxxxx3hrrvuCg899FB47LHHwuOPPx4eeOCBcO+998ZnV155ZbjgggvCySefHA4++OAY
        zsorrxwWXHDBMNNMM4WJJpooE2+79AyQkmdk6DzzzBOWX375sMkmm4Tdd989nHHGGVG/++67L+r+7LPP
        hjfeeCN88MEH4dNPPw1fffVV+Prrr8M333wTvvvuu3iFX375Zfj444/Dm2++Gd2/+OKL4f77749hHX74
        4WHnnXcOa6yxRphlllliPno6GbrCyNVXXz1cc8014Zlnnglvv/12+OKLL8Lvv/8emuHff/8N//zzz8Bd
        MeDnjz/+CN9//3149913w4MPPhguvvjicMABB4Q111wzjBgxomNDUbLnn3/+sOmmm4YTTzwx3HDDDeG5
        554Ln3/+efjrr78GNCgG9NSVNLabzh9++CEWykknndTVdYCuMMwxxxzhp59+GggqCynE1SpnZXIHrBzq
        Xn7+/vvv6C4Pv/32WyyF1Lozzzwz7L///mGttdYKiyyySKxVakamm266MPvss4fVVlstHHXUUeHmm2+O
        hUh6NAN6ANyij70XU0iWXgX5ExXmZptt5ub5ALMCVfWNNtooeka5ZhkmJXQFqSx9Zu+BlaVuFX/qB1DC
        aTJoTj777LPYpPz444+1hINUdy+u9JqHVs/zgD9b8KipNq8TZgV6d2y++ebRM6WzmUGqBon5888/Y+Zb
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>